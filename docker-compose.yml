version: "3.8"
services:
  app:
    restart: always
    build:
      context: .
      dockerfile: ./docker/App.Dockerfile
      target: development
    volumes:
      - .:/usr/src/app
    ports:
      - ${PORT}:3000
    expose:
      - ${PORT}
    command: npm run start:dev
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - kafka
    links:
      - postgres
      - redis
      - kafka

  postgres:
    image: postgres:alpine
    restart: always
    env_file:
      - .env
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
        - "9094:9094"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      extra_hosts:
        - "host.docker.internal:172.17.0.1"
volumes:
  pgdata:
